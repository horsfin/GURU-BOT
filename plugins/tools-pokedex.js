let handler = async (m, { conn, usedPrefix, text }) => { 
         if(isNaN(text)) { 
           var number = text.split`@`[1] 
   } else if(!isNaN(text)) { 
           var number = text 
   } 
  
   if(!text && !m.quoted) return conn.reply(m.chat, `–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–µ–≤–æ–π –Ω–æ–º–µ—Ä, —Ç–µ–≥ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Ü–µ–ª–µ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`, m) 
  
   if(isNaN(number)) return conn.reply(m.chat, `_*–ù–æ–º–µ—Ä –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.*_`, m) 
   if(number.length > 15) return conn.reply(m.chat, `*_–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.*_`, m) 
   try { 
                 if(text) { 
                         var user = number + '@s.whatsapp.net' 
                 } else if(m.quoted.sender) { 
                         var user = m.quoted.sender 
                 } else if(m.mentionedJid) { 
                     var user = number + '@s.whatsapp.net' 
                         }   
                 } catch (e) { 
   } finally { 
     let groupMetadata = m.isGroup ? await conn.groupMetadata(m.chat) : {} 
     let participants = m.isGroup ? groupMetadata.participants : [] 
     let users = m.isGroup ? participants.find(u => u.id == user) : {} 
     if(!users) return conn.reply(m.chat, `*_–¶–µ–ª—å –∏–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã—à–ª–∏ –∏–∑ —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã –∏–ª–∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –µ–µ —á–ª–µ–Ω–∞–º–∏.*_`, m) 
     if(user === m.sender) return conn.reply(m.chat, `_*–ù–µ–ª—å–∑—è –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å —Å–∞–º–∏–º —Å–æ–±–æ–π.*_`, m) 
     if(user === conn.user.jid) return conn.reply(m.chat, `_*–ù–µ–ª—å–∑—è –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π. :')*_`, m) 
  
     if (typeof global.db.data.users[user] == "undefined") return m.reply("_*–ß–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –æ—Ç–º–µ—Ç–∏–ª–∏, –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.*_") 
  
     if(global.db.data.users[m.sender].pasangan != "" && global.db.data.users[global.db.data.users[m.sender].pasangan].pasangan == m.sender && global.db.data.users[m.sender].pasangan != user){ 
       conn.reply(m.chat,`–í—ã –≤—Å—Ç—Ä–µ—á–∞–µ—Ç–µ—Å—å @${global.db.data.users[m.sender].pasangan.split('@')[0]}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—Ç–∞–Ω—å—Ç–µ—Å—å (–ü—Ä–∏–º–µ—Ä: .—Ä–∞—Å—Å—Ç–∞—Ç—å—Å—è, —á—Ç–æ–±—ã —Ä–∞–∑–æ—Ä–≤–∞—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è), —á—Ç–æ–±—ã —Å–Ω—è—Ç—å @${user.split('@')[0]}\n\n–∫—Å—Ç–∞—Ç–∏ –ø–µ—á–∞–ª—å–Ω–æ!`,m,{contextInfo: { 
         mentionedJid: [user,global.db.data.users[m.sender].pasangan] 
       }}) 
     }else if(global.db.data.users[user].pasangan != ""){ 
       var pacar = global.db.data.users[user].pasangan 
       if (global.db.data.users[pacar].pasangan == user){ 
         if (m.sender == pacar && global.db.data.users[m.sender].pasangan == user) return conn.reply(m.chat,`–¢—ã –≤—Å—Ç—Ä–µ—á–∞–µ—à—å—Å—è —Å @${beb.split('@')[0]}`,m,{contextInfo: { 
           mentionedJid: [beb] 
         }}) 
         conn.reply(m.chat,`–ò–∑–≤–∏–Ω–∏—Ç–µ, @${user.split('@')[0]} —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å @${pacar.split('@')[0]}\n–ù–∞–π–¥–∏—Ç–µ –¥—Ä—É–≥–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞!`,m,{contextInfo: { 
           mentionedJid: [user,pacar] 
         }}) 
       }else{ 
         global.db.data.users[m.sender].pasangan = user 
         conn.reply(m.chat,`–í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –∫–∏–Ω—É–ª–∏ –∑–∞—è–≤–∫—Éüòò @${user.split('@')[0]} –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞!\n\n–ü—Ä–∏–º–µ—Ä *${usedPrefix}terima @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å* —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è\n*${usedPrefix}tolak @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è*`,m,{contextInfo: { 
           mentionedJid: [user] 
         }}) 
       } 
     }else if (global.db.data.users[user].pasangan == m.sender){ 
       global.db.data.users[m.sender].pasangan = user 
       conn.reply(m.chat,`–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç–µ—Å—å @${user.split('@')[0]}\n\n–ü—É—Å—Ç—å –∂–∏–∑–Ω—å –±—É–¥–µ—Ç –¥–æ–ª–≥–æ–π –∏ —Å—á–∞—Å—Ç–ª–∏–≤–æ–π –≤—Å–µ–≥–¥–∞ü•≥ü•≥ü•≥`,m,{contextInfo: { 
         mentionedJid: [user] 
       }}) 
     }else { 
       global.db.data.users[m.sender].pasangan = user 
       conn.reply(m.chat,`–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª @${user.split('@')[0]} –≤ –∑–∞–≥—Å\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞!\n\n–ü—Ä–∏–º–µ—Ä *${usedPrefix}terima @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å* —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è\n*${usedPrefix}tolak @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è*`,m,{contextInfo: { 
         mentionedJid: [user] 
       }}) 
     } 
         }         
 } 
 handler.help = ['tembak *@tag*'] 
 handler.tags = ['jadian'] 
 handler.command = /^(tembak)$/i 
 handler.group = true 
 handler.limit = false 
 handler.fail = null 
 module.exports = handler
