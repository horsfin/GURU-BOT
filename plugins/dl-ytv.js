import ytdl from 'ytdl-core';
import fs from 'fs';
import os from 'os';

let limit = 500;
let handler = async (m, { conn, args, isPrems, isOwner, usedPrefix, command }) => {
  if (!args || !args[0]) throw `‚ú≥Ô∏è –ø—Ä–∏–º–µ—Ä:\n${usedPrefix + command} https://youtu.be/YzkTFFwxtXI`;
  if (!args[0].match(/youtu/gi)) throw `‚ùé —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ —é—Ç—É–±`;

  let chat = global.db.data.chats[m.chat];
  m.react(rwait);
  try {
    const info = await ytdl.getInfo(args[0]);
    const format = ytdl.chooseFormat(info.formats, { quality: 'highest' });
    if (!format) {
      throw new Error('–Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω—É–∂–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞');
    }

    if (format.contentLength / (1024 * 1024) >= limit) {
      return m.reply(`‚â° *–ó–ê–ì–†–£–ó–ß–ò–ö*\n\n‚ñ¢ *‚öñÔ∏è—Ä–∞–∑–º–µ—Ä*: ${format.contentLength / (1024 * 1024).toFixed(2)}MB\n‚ñ¢ *üéûÔ∏è–∫–∞—á–µ—Å—Ç–≤–æ*: ${format.qualityLabel}\n\n‚ñ¢ —Ñ–∞–∏–ª –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∏ *+${limit} MB*`);
    }

    const tmpDir = os.tmpdir();
    const fileName = `${tmpDir}/${info.videoDetails.videoId}.mp4`;

    const writableStream = fs.createWriteStream(fileName);
    ytdl(args[0], {
      quality: format.itag,
    }).pipe(writableStream);

    writableStream.on('–§–ò–ù–ò–®', () => {
      conn.sendFile(
        m.chat,
        fs.readFileSync(fileName),
        `${info.videoDetails.videoId}.mp4`,
        `‚úº ‚Ä¢‚Ä¢‡πë‚ãØ‚ùÄ Y O U T U B E ‚ùÄ‚ãØ‚ãÖ‡πë‚Ä¢‚Ä¢ ‚úº
	  
	  ‚ùè –ó–∞–≥–ª–∞–≤–ª–µ–Ω–∏–µ: ${info.videoDetails.title}
	  ‚ùê –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${info.videoDetails.lengthSeconds} —Å–µ–∫—É–Ω–¥
	  ‚ùë –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${info.videoDetails.viewCount}
	  ‚ùí –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${info.videoDetails.publishDate}
	  ‚ùí –°—Å—ã–ª–∫–∞: ${args[0]}
	  
	  ‚ä±‚îÄ‚îÅ‚ä±‡ºª‚óè‡º∫‚ä∞‚îÅ‚îÄ‚ä∞`,
        m,
        false,
        { asDocument: chat.useDocument }
      );

      fs.unlinkSync(fileName); // Delete the temporary file
      m.react(done);
    });

    writableStream.on('error', (error) => {
      console.error(error);
      m.reply('–û—à–∏–±–∫–∞.');
    });
  } catch (error) {
    console.error(error);
    m.reply('–û—à–∏–±–∫–∞.');
  }
};

handler.help = ['ytmp4 <yt-link>'];
handler.tags = ['dl'];
handler.command = ['—é—Ç–≤', '–≤–∏–¥–µ–æ'];
handler.diamond = false;

export default handler;

