
let handler = async (m, { conn, text }) => { 
         if(isNaN(text)) { 
           var number = text.split`@`[1] 
   } else if(!isNaN(text)) { 
           var number = text 
   } 
  
   if(!text && !m.quoted) return conn.reply(m.chat, `–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä, –ø–æ–º–µ—Ç–∫—É –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ü–µ–ª–µ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`, m) 
  
   if(isNaN(number)) return conn.reply(m.chat, `–î–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!`, m) 
   if(number.length > 15) return conn.reply(m.chat, `–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!`, m) 
   try { 
                 if(text) { 
                         var user = number + '@s.whatsapp.net' 
                 } else if(m.quoted.sender) { 
                         var user = m.quoted.sender 
                 } else if(m.mentionedJid) { 
                     var user = number + '@s.whatsapp.net' 
                         }   
                 } catch (e) { 
   } finally { 
     let groupMetadata = m.isGroup ? await conn.groupMetadata(m.chat) : {} 
     let participants = m.isGroup ? groupMetadata.participants : [] 
     let users = m.isGroup ? participants.find(u => u.id == user) : {} 
     if(!users) return conn.reply(m.chat, `–¶–µ–ª—å –∏–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã—à–ª–∏ –∏–∑ —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã –∏–ª–∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –µ–µ —á–ª–µ–Ω–∞–º–∏.`, m) 
     if(user === m.sender) return conn.reply(m.chat, `–ù–∞–π–¥–∏ —Å–µ–±–µ –∫–æ–≥–æ-—Ç–æ,—Å–∞–º–æ–≥–æ —Å–µ–±—è –ª—é–±–∏—Ç—å –±—É–¥–µ—à—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ!`, m) 
     if(user === conn.user.jid) return conn.reply(m.chat, `–ù–µ—Ç,—Ç–∞–∫ –Ω–µ –≤—ã–π–¥–µ—Ç t_t`, m) 
  
     if(global.db.data.users[user].pasangan != m.sender){ 
       conn.reply(m.chat,`–ï—É @${user.split('@')[0]} —è –Ω–µ —Å–æ–±–∏—Ä–∞—é—Å—å`,m,{contextInfo: { 
         mentionedJid: [user] 
       }}) 
     }else{ 
       global.db.data.users[m.sender].pasangan = user 
       conn.reply(m.chat,`–í—ã –ø–æ–º–æ–ª–≤–ª–µ–Ω—ã @${user.split('@')[0]}\n\n–∂–µ–ª–∞—é —á—Ç–æ-–±—ã —ç—Ç–æ –¥–ª–∏–ª–æ—Å—å –≤–µ—á–Ω–æ @${user.split('@')[0]} üíì @${m.sender.split('@')[0]} ü•≥ü•≥ü•≥`,m,{contextInfo: { 
         mentionedJid: [m.sender,user] 
       }}) 
     } 
         }         
 } 
 handler.help = ['terima *@tag*'] 
 handler.tags = ['jadian'] 
 handler.command = /^(terima)$/i 
 handler.group = true 
 handler.limit = false 
 handler.fail = null 
 module.exports = handler
